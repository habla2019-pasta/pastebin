module.exports = ({
  "settings": {
    "react": {
      "createClass": "createReactClass", 
      "pragma": "React",
      "fragment": "Fragment",
      "version": "detect",
      "flowVersion": "detect"
    },
    "propWrapperFunctions": [
        "forbidExtraProps",
        {"property": "freeze", "object": "Object"}
    ],
    "linkComponents": [
      // custom "a" tag aliases across repo to be mentioned here
      // example <Link to="" /> from react-router-dom
      {
        "name": "Link",
        "linkAttribute": "to"
      }
    ]
  },
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:json/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:flowtype/recommended"
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true,
      "modules": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "parser": "babel-eslint",
  "plugins": [
    "react",
    "json",
    "react-hooks",
    "jsx-a11y",
    "flowtype"
  ],
  "rules": {
    //general
    "indent": [ "error", 2 ],
    "no-trailing-spaces": "error",
    "semi": "error",
    "quotes": [ "error", "single" ],
    "no-multiple-empty-lines": "error",
    "object-curly-newline": ["error", {
      "ObjectExpression": "always",
      "ObjectPattern": { "multiline": true },
      "ImportDeclaration": "always",
      "ExportDeclaration": { "multiline": true, "minProperties": 3 }
    }],
    "brace-style": ["error", "1tbs"],
    "object-curly-spacing": [ "error", "always" ],
    "no-unused-vars": "error",
    //react
    "react/jsx-sort-props": ["error", {
      "callbacksLast": true,
      "shorthandFirst": true,
      "shorthandLast": false,
      "ignoreCase": true,
      "noSortAlphabetically": false
    }],
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/boolean-prop-naming": [
      "error",
      { 
        "rule": "^(is|has)[A-Z]([A-Za-z0-9]?)",
        "validateNested": true,
        "message": "It is better if your prop ({{ propName }}) matches this pattern: ({{ pattern }})"
      }
    ]
  }
});
